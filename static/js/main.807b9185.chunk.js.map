{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","setMovies","useState","setQuery","setMovie","isLoaded","setIsLoaded","isError","setIsError","handleSubmit","event","a","preventDefault","data","Poster","Title","Plot","imdbID","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","classNames","disabled","onClick","isNotACopy","every","film","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.807b9185.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=cab9dc95';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  setMovies: (movies: Movie[]) => void;\n  movies: Movie[];\n};\n\nexport const FindMovie: React.FC<Props> = ({ setMovies, movies }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setIsLoaded(true);\n    try {\n      const data = await getMovie(query);\n\n      if ('Error' in data) {\n        setIsError(true);\n      } else {\n        const {\n          Poster, Title, Plot, imdbID,\n        } = data;\n        const defaultPicture\n          = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\n        const imgUrl = (Poster !== 'N/A') ? Poster : defaultPicture;\n        const imdbUrl = `https://www.imdb.com/title/${imdbID}`;\n        const newMovie = {\n          title: Title,\n          description: Plot,\n          imgUrl,\n          imdbUrl,\n          imdbId: imdbID,\n        };\n\n        setMovie(newMovie);\n      }\n    } catch (error) {\n      throw new Error(`Unexpected error${error}`);\n    } finally {\n      setIsLoaded(false);\n    }\n  };\n\n  const clearForm = () => {\n    setQuery('');\n    setMovie(null);\n  };\n\n  const updateList = () => {\n    const isNotACopy = movies\n      .every(film => film.imdbId !== movie?.imdbId);\n\n    if (movie && isNotACopy) {\n      setMovies([\n        ...movies,\n        movie,\n      ]);\n    }\n\n    clearForm();\n  };\n\n  const handleQuery = (value: React.SetStateAction<string>) => {\n    setQuery(value);\n    setIsError(false);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={(event) => handleQuery(event.target.value)}\n            />\n          </div>\n\n          {isError\n            && (\n              <p className=\"help is-danger\" data-cy=\"errorMessage\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button',\n                'is-light',\n                { 'is-loading': isLoaded },\n              )}\n              disabled={!query}\n            >\n              {!movie ? 'Find a movie' : 'Search again'}\n            </button>\n          </div>\n\n          {movie\n            && (\n              <div className=\"control\">\n                <button\n                  data-cy=\"addButton\"\n                  type=\"button\"\n                  className=\"button is-primary\"\n                  onClick={updateList}\n                >\n                  Add to the list\n                </button>\n              </div>\n            )}\n        </div>\n      </form>\n\n      {movie\n        && (\n          <div className=\"container\" data-cy=\"previewContainer\">\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={movie} />\n          </div>\n        )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie setMovies={setMovies} movies={movies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}